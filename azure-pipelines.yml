# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    - script: |
        nproc
        free -m
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
  - job: Windows
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    - script: |
        echo %NUMBER_OF_PROCESSORS%
        wmic CPU get NAME
        winsat disk -drive c
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
  - job: OSX
    pool:
      vmImage: 'macOS-latest'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    - script: |
        system_profiler | grep "Cores"
        system_profiler SPHardwareDataType | grep "  Memory:"
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'